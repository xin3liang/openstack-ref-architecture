- include_vars: "{{ansible_os_family}}.yml"

- include: roles/common/deploy_pkg.yml component=keystone notify=restart-keystone
           pkg_name={{keystone_pkg}}

- name: Add keystone DB
  mysql_db: name=keystone state=present
            login_host={{mysql_host}} login_user={{mysql_root_user}} login_password={{mysql_root_pass}}

- name: Add keystone DB user
  mysql_user: name={{keystone_db_user}} password={{keystone_db_pass}} priv=keystone.*:ALL state=present
              host=% login_host={{mysql_host}} login_user={{mysql_root_user}} login_password={{mysql_root_pass}}

- name: Configure keystone.conf
  template: src=keystone.conf dest=/etc/keystone/
  notify: restart-keystone

- name: Create domains directory
  when: ldap_multidomain_support == True
  file: path=/etc/keystone/domains state=directory mode=0755

- name: Configure domain keystone.{{ ldap_domain }}.conf
  when: ldap_multidomain_support == True
  copy: src=keystone.domain.conf dest=/etc/keystone/domains/keystone.{{ ldap_domain }}.conf
  notify: restart-keystone

- name: Configure keystone-paste.ini
  copy: src=keystone-paste.ini dest=/etc/keystone/
  notify: restart-keystone

- name: Add CLI credentials file
  template: src=nova-admin.rc dest=/srv/keystone/

- name: Run DB sync
  command: /srv/keystone/bin/keystone-manage db_sync
  when: pkg_changed.changed

- name: Run fernet-setup
  command: /srv/keystone/bin/keystone-manage fernet_setup
           --keystone-user keystone --keystone-group keystone
  when: pkg_changed.changed

- name: Bootstrap keystone
  shell: /srv/keystone/bin/keystone-manage bootstrap
           --bootstrap-password {{keystone_admin_pass}}
           --bootstrap-admin-url "{{keystone_private_uri}}"
           --bootstrap-public-url "{{keystone_public_api}}"
           --bootstrap-internal-url "{{keystone_public_api}}"
           --bootstrap-region-id RegionOne
           --bootstrap-project-name service
           --bootstrap-role-name admin
           --bootstrap-service-name keystone
         && touch /etc/keystone/ansible.bootstrapped
  args:
    creates: /etc/keystone/ansible.bootstrapped

- name: Disable default apache configuration
  when: ansible_os_family == 'Debian'
  command: a2dissite 000-default
  register: result
  changed_when: "'already disabled' not in result.stdout"
  notify: restart-keystone

- name: Enable apache configuration
  template: src=apache.conf dest={{apache_sites}}/keystone.conf
  notify: restart-keystone

- name: Ensure apache is enabled and running
  service: name={{apache_daemon}} enabled=true state=started

# force keystone to be restarted *now* so services can use it
- meta: flush_handlers
