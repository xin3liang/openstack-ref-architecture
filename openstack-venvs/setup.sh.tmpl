#!/bin/bash -e

SERVICE="#PROJECT_NAME#"
SERVICE_DIR=$(dirname $(readlink -f $0))

getent passwd $SERVICE >/dev/null || \
    useradd --home-dir $SERVICE_DIR --system --shell /bin/false $SERVICE

[ -d /etc/$SERVICE ] || cp -r $SERVICE_DIR/src/etc /etc/$SERVICE

mkdir -p /var/log/$SERVICE
mkdir -p /var/lib/$SERVICE
chown -R $SERVICE:$SERVICE /var/log/$SERVICE
chown -R $SERVICE:$SERVICE /var/lib/$SERVICE
chown $SERVICE:$SERVICE /etc/$SERVICE

cat >> /etc/logrotate.d/$SERVICE << EOF
    /var/log/$SERVICE/*.log {
    daily
    missingok
    rotate 7
    compress
    notifempty
    nocreate
}
EOF

cd $SERVICE_DIR
if [ "$SERVICE" == 'nova' ] ; then
	if which qemu-system-aarch64 ; then
		# we are configuring a compute node
		usermod -G libvirt,libvirt-qemu $SERVICE
		for x in *-init.d ; do
			if [ "$x" != "nova-compute-init.d" ] ; then
				rm $x
			fi
		done
	else
		# we are configuring a controller
		[ -e nova-compute-init.d ] && rm nova-compute-init.d
	fi
	mv /etc/nova/nova/* /etc/nova/ && rmdir /etc/nova/nova
	cp $SERVICE_DIR/bin/nova-rootwrap /usr/local/bin
	cp $SERVICE_DIR/bin/privsep-helper /usr/local/bin
	sudo -u nova mkdir -p /var/lib/nova/instances
fi
if [ "$SERVICE" == 'neutron' ] ; then
	if which qemu-system-aarch64 ; then
		# we are configuring a compute node
		for x in *-init.d ; do
			if [ "$x" != "neutron-openvswitch-agent-init.d" ] ; then
				rm $x
			fi
		done

	fi
	mv /etc/neutron/neutron/* /etc/neutron/ && rmdir /etc/neutron/neutron
	cp $SERVICE_DIR/bin/neutron-rootwrap /usr/local/bin
	cp $SERVICE_DIR/bin/neutron-ns-metadata-proxy /usr/local/bin
fi
if [ "$SERVICE" == 'cinder' ] ; then
	if which qemu-system-aarch64 ; then
		rm /srv/cinder/cinder-scheduler-init.d
		rm /srv/cinder/cinder-api-init.d
		cp $SERVICE_DIR/bin/cinder-rootwrap /usr/local/bin
	else
		rm /srv/cinder/cinder-volume-init.d
	fi
	mv /etc/cinder/cinder/* /etc/cinder/ && rmdir /etc/cinder/cinder
fi
if [ "$SERVICE" == 'heat' ] ; then
	mv /etc/heat/heat/* /etc/heat/ && rmdir /etc/heat/heat
fi
if [ "$SERVICE" == 'keystone' ] ; then
  exit 0
fi

for x in *-init.d ; do
	d=$(basename $x | sed -e 's/-init.d//')
	[ -e /etc/init.d/$d ] && rm /etc/init.d/$d
	ln -s $SERVICE_DIR/$x /etc/init.d/$d
	d="${d}.service"
	[ -e /lib/systemd/system/$d ] && rm /lib/systemd/system/$d
	[ -e /etc/systemd/system/$d ] && rm /etc/systemd/system/$d
	[ -e /run/systemd/generator.late/$d ] && rm /run/systemd/generator.late/$d
	systemctl enable $d || true
done

cat > /etc/sudoers.d/$SERVICE <<EOF
$SERVICE ALL=(ALL) NOPASSWD:ALL
EOF
